# Configuration options for clang-tidy
# CSS Linux machines, Sep 2019: LLVM version 3.8.1
#
# usage: clang-tidy *.cpp -- -std=c++14
#
#
---
# See https://clang.llvm.org/extra/clang-tidy/#using-clang-tidy for all possible checks
Checks: '*,-cert-err58-cpp,-cppcoreguidelines-avoid-magic-numbers,-cppcoreguidelines-owning-memory,-cppcoreguidelines-pro-bounds-array-to-pointer-decay,-cppcoreguidelines-pro-bounds-constant-array-index,-cppcoreguidelines-pro-bounds-pointer-arithmetic,-cppcoreguidelines-special-member-functions,-fuchsia-*,-google-build-using-namespace,-google-global-names-in-headers,-google-readability-braces-around-statements,-hicpp-braces-around-statements,-hicpp-no-array-decay,-hicpp-special-member-functions,-llvm-header-guard,-modernize-pass-by-value,-modernize-use-trailing-return-type,-readability-braces-around-statements,-readability-magic-numbers,'

# Only defined in the newer clang-tidy not the old CSS Lab machines
# WarningsAsErrors:  '*'
HeaderFilterRegex: '.*'

# Based on LLVM style in https://llvm.org/docs/CodingStandards.html#the-low-level-issues
CheckOptions:
 - { key: readability-identifier-naming.ClassCase,           value: CamelCase  }
 - { key: readability-identifier-naming.StructCase,          value: CamelCase  }
 - { key: readability-identifier-naming.EnumCase,            value: CamelCase  }
 - { key: readability-identifier-naming.VariableCase,        value: CamelCase  }
 - { key: readability-identifier-naming.ParameterCase,       value: CamelCase  }
 - { key: readability-identifier-naming.MemberCase,          value: CamelCase  }
 - { key: readability-identifier-naming.GlobalConstantCase,  value: UPPER_CASE }
 - { key: readability-identifier-naming.FunctionCase,        value: camelBack  }
 - { key: readability-identifier-naming.PublicMethodCase,    value: camelBack  }
 - { key: readability-identifier-naming.PrivateMethodCase,   value: camelBack  }
 - { key: readability-identifier-naming.PublicMemberCase,    value: CamelCase  }
...
